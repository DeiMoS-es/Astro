---
// @ts-ignore
import Papa from "papaparse";
import Layout from "../layouts/Layout.astro";
import xlsx from "xlsx";
import jsonfile from "jsonfile";

const mainUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ9MAoGS7C6iChQCUYq5x8czgdiANxkNYxTA4iGjiWMIUgz28a8GJEUKbGKwhiB_y-HgJi72EzO0DNK/pub?gid=0&single=true&output=csv";
const data = await fetch(mainUrl).then(res => res.text()).then(data => Papa.parse(data, { header: true }));
// console.log(data);
async function fecthAndSaveData(){
    try{
        const csvData = await fetch(mainUrl).then(res => res.text());
        const parsedData = Papa.parse(csvData, { header: true });
        const jsonData = parsedData.data;
        const rutaJson = 'E:/Repositorios/Astro/nadi-web/src/json/data.json';
        // const rutaJsonServidor = ;
        await jsonfile.writeFile(rutaJson, jsonData, { spaces: 2 });
        fetchAndSaveDataBySheet(jsonData);
        console.log("Datos guardados en: ", rutaJson);
    }
    catch(error){
        console.error("Error al obtener los datos: ", error);
    }
};
async function fetchAndSaveDataBySheet(jsonData){
    for(const element of jsonData){
        if(element.url != '' && element.url != null){
            const url = element.url;
            try {
                const csvData = await fetch(url).then(res => res.text());
                const parsedData = Papa.parse(csvData, { header: true });
                const filteredData = parsedData.data.filter(row => Object.values(row).some(value => String(value).trim() !== '')); 
                const jsonData = parsedData.data;
                const rutaJson = `E:/Repositorios/Astro/nadi-web/src/json/${element.pestaña}.json`;
                await jsonfile.writeFile(rutaJson, filteredData, { spaces: 2 });
                console.log("Datos guardados en: ", rutaJson);
            } catch (error) {
                console.error("Error al obtener los datos: ", error);
            }
        }
    }
};
fecthAndSaveData();
function processData(data) {
    const groupedData = {};
    let currentGroup = null;
    data.forEach((row) => {
        // Ignorar filas completamente vacías
        if (!row[0] && !row[1] && !row[2]) {
            return;
        }
        // Si encontramos un encabezado de grupo (Ejemplo: "Datos personales")
        if (row[0] && row[0].trim()) {
            currentGroup = row[0].trim();
            currentGroup = currentGroup.replace(" ", "_").toLowerCase();
            if (!groupedData[currentGroup]) {
                groupedData[currentGroup] = {};
            }
        } else if (currentGroup && row[1] && row[2]) {
            // Añadir clave y valor dentro del grupo actual
            groupedData[currentGroup][row[1].trim()] = row[2].trim();
        }
    });
    // Eliminar grupos vacíos que no tienen claves/valores
    for (const group in groupedData) {
        if (Object.keys(groupedData[group]).length === 0) {
            delete groupedData[group];
        }
    }
    return groupedData;
}

// Función para obtener datos CSV desde una URL y procesarlos
async function fetchAndProcessCsv(url) {
    try {
        const response = await fetch(url);
        if (!response.ok) {
            throw new Error(`Error al obtener los datos: ${response.statusText}`);
        }
        const csvText = await response.text();
        // Convertir el CSV en un arreglo utilizando Papaparse
        const jsonData = Papa.parse(csvText, { header: false }).data;
        // Procesar los datos agrupándolos por secciones
        return processData(jsonData);
    } catch (error) {
        console.error('Error procesando el CSV:', error);
        throw error;
    }
}
const sobreMiUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ9MAoGS7C6iChQCUYq5x8czgdiANxkNYxTA4iGjiWMIUgz28a8GJEUKbGKwhiB_y-HgJi72EzO0DNK/pub?gid=866805424&single=true&output=csv";
async function processSobreMi() {
    try {
        const data = await fetchAndProcessCsv(sobreMiUrl);
        console.log('Datos procesados de sobre_mi:', data);
    } catch (error) {
        console.error('Error procesando la pestaña sobre_mi:', error);
    }
}
async function processAllData() {
  const allData = {};

  for (const item of data.data) {
    try {
      const data = await fetchAndProcessCsv(item.url);
      allData[item.pestaña] = data;
    } catch (error) {
      console.error(`Error procesando la pestaña ${item.pestaña}:`, error);
    }
  }

  console.log('Datos procesados:', JSON.stringify(allData, null, 2));
}

// processAllData();
// processSobreMi();
// async function fetchCSVData(url){
//     const res = await fetch(url);
//     const data = await res.text();
//     return Papa.parse(data, { header: true });
// }

// async function main(){
//     const mainUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ9MAoGS7C6iChQCUYq5x8czgdiANxkNYxTA4iGjiWMIUgz28a8GJEUKbGKwhiB_y-HgJi72EzO0DNK/pub?gid=0&single=true&output=csv";
//     // Fetch y parse del CSV principal
//     const res = await fetch(mainUrl);
//     const data = await res.text();
//     const parsedData = Papa.parse(data, { header: true });
//     // console.log(object);
//     // Objeto para almacenar todos los datos
//     const allData = {};
//     // Iterar sobre cada entrada del CSV principal
//     for(const item of parsedData.data){
//         // Si la entrada tiene una URL
//         if(item.url){
//             // Fetch y parse del CSV de la URL
//             const url = item.url;
//             const urlData = await fetchCSVData(url).then(data => data.data);
//             let section = null;
//             // let subsection = null;
//             allData[item.pestaña] = {};
//             let currentSection = null
//             urlData.forEach(row => {
//                 const keys = Object.keys(row);
//                 console.log("keys: "+keys);
//                 const firstKey = keys[0];
//                 console.log("firstKey: "+firstKey);
//                 const firstValue = row[firstKey];
//                 console.log("firstValue: "+firstValue);
//                 if (firstValue === "...") { 
//                     currentSection = null; // Reseteamos cuando encontramos "..."
//                 } else if (!currentSection) {
//                     currentSection = firstValue; 
//                     allData[item.pestaña][currentSection] = {};
//                 } else{
//                     allData[item.pestaña][currentSection][firstValue] = row[keys[1]];
//                 }
//             });
//             // Almacenar los datos en el objeto
//         }
//     }
//     console.log(JSON.stringify(allData, null, 2));
// }
// main().catch(err => console.error(err));
// const res = await fetch("https://docs.google.com/spreadsheets/d/e/2PACX-1vQ9MAoGS7C6iChQCUYq5x8czgdiANxkNYxTA4iGjiWMIUgz28a8GJEUKbGKwhiB_y-HgJi72EzO0DNK/pub?gid=0&single=true&output=csv");
// const data = await res.text();
// console.log(data);
// const parsedData = Papa.parse(data, { header: true });
// console.log(parsedData);
// Filtrar para obtener la URL de la pestaña 'cv'
// const cvData = parsedData.data.find(item => item.pestaña === 'sobre_mi');
// let cvParsedData = null;
// if (cvData) {
//   // Obtener los datos del CSV de la pestaña 'cv'
//   const cvRes = await fetch(cvData.url);
//   const cvText = await cvRes.text();
//   cvParsedData = Papa.parse(cvText, { header: true });
// }
// console.log(cvParsedData);
---
<Layout title="Sobre mi">
    <h1>Aqui hablo sobre mi!</h1>
</Layout>